apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "org.jlleitschuh.gradle.ktlint"

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "ca.etsmtl.etsmobile"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test {
            java.srcDirs += 'src/test/kotlin'
            res.srcDirs += 'src/test/resources'
        }
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

// Versions
def support = '27.1.1'
def constraint_layout = '1.1.0'
def lifecycle = '1.1.0'
def room = '1.1.0-beta2'
def espresso = '3.0.1'
def astl = '1.0.1'
def junit = '4.12'
def mockito = '2.7.19'
def mockito_all = '1.10.19'
def glide = '4.6.1'
def dagger = '2.11'
def moshi = '1.5.0'
def kotshi = '1.0.2'
def retrofit = '2.3.0'
def okhttp = '3.8.0'
def dimens = '1.4'
def leakcanary = '1.5.4'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support libraries
    implementation "com.android.support:appcompat-v7:${support}"
    implementation "com.android.support:design:${support}"
    implementation "com.android.support:support-v4:${support}"
    implementation "com.android.support:cardview-v7:${support}"
    implementation "com.android.support:recyclerview-v7:${support}"
    implementation "com.android.support.constraint:constraint-layout:${constraint_layout}"

    // Architecture components
    implementation "android.arch.lifecycle:extensions:${lifecycle}"
    kapt "android.arch.lifecycle:compiler:${lifecycle}"
    implementation "android.arch.persistence.room:runtime:${room}"
    kapt "android.arch.persistence.room:compiler:${room}"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Dependencies for local unit tests
    testImplementation "junit:junit:${junit}"
    testImplementation "org.mockito:mockito-all:${mockito_all}"
    testImplementation "android.arch.persistence.room:testing:${room}"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "android.arch.core:core-testing:${lifecycle}"
    testImplementation "org.mockito:mockito-core:${mockito}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttp}"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:${astl}"
    androidTestImplementation "com.android.support.test:rules:${astl}"
    androidTestImplementation "android.arch.persistence.room:testing:${room}"

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${espresso}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${espresso}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${espresso}"

    // Glide
    implementation "com.github.bumptech.glide:glide:${glide}"
    kapt "com.github.bumptech.glide:compiler:${glide}"

    // Dagger
    implementation "com.google.dagger:dagger:${dagger}"
    implementation "com.google.dagger:dagger-android:${dagger}"
    implementation "com.google.dagger:dagger-android-support:${dagger}"
    kapt "com.google.dagger:dagger-compiler:${dagger}"
    kapt "com.google.dagger:dagger-android-processor:${dagger}"

    // Moshi
    implementation "com.squareup.moshi:moshi:${moshi}"
    implementation "com.squareup.moshi:moshi-kotlin:${moshi}"

    // Kotshi
    implementation "se.ansman.kotshi:api:${kotshi}"
    kapt "se.ansman.kotshi:compiler:${kotshi}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${retrofit}"

    // Material Design Dimensions
    implementation "com.dmitrymalkovich.android:material-design-dimens:${dimens}"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanary}"
}
