apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "org.jlleitschuh.gradle.ktlint"

apply plugin: 'com.akaita.android.easylauncher'

//apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "ca.etsmtl.etsmobile"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test {
            java.srcDirs += 'src/test/kotlin'
        }
        androidTest {
            java.srcDirs += 'src/androidTest/kotlin'
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Support libraries
    implementation "com.android.support:appcompat-v7:$support"
    implementation "com.android.support:design:$support"
    implementation "com.android.support:support-v4:$support"
    implementation "com.android.support:cardview-v7:$support"
    implementation "com.android.support:recyclerview-v7:$support"
    implementation "com.android.support:customtabs:$support"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout"

    // Architecture components
    implementation "android.arch.lifecycle:extensions:$lifecycle"
    kapt "android.arch.lifecycle:compiler:$lifecycle"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Dependencies for local unit tests
    testImplementation "junit:junit:${junit}"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "android.arch.core:core-testing:$lifecycle"
    testImplementation "org.mockito:mockito-core:$mockito"
    testImplementation "org.mockito:mockito-inline:$mockito_inline"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:${astl}"
    androidTestImplementation "com.android.support.test:rules:${astl}"

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${espresso}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${espresso}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${espresso}"
    androidTestImplementation "org.mockito:mockito-core:${mockito}"

    // Glide
    implementation "com.github.bumptech.glide:glide:${glide}"
    kapt "com.github.bumptech.glide:compiler:${glide}"

    // Dagger
    implementation "com.google.dagger:dagger:${dagger}"
    implementation "com.google.dagger:dagger-android:${dagger}"
    implementation "com.google.dagger:dagger-android-support:${dagger}"
    kapt "com.google.dagger:dagger-compiler:${dagger}"
    kapt "com.google.dagger:dagger-android-processor:${dagger}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${retrofit}"

    // Material Design Dimensions
    implementation "com.dmitrymalkovich.android:material-design-dimens:${dimens}"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanary}"

    // Firebase
    implementation "com.google.firebase:firebase-core:$firebase"
    implementation "com.crashlytics.sdk.android:crashlytics:$firebase_crashlytics"

    // Mockito-Kotlin
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mockito_kotlin"

    implementation project(':repository')
}

//apply plugin: 'com.google.gms.google-services'

